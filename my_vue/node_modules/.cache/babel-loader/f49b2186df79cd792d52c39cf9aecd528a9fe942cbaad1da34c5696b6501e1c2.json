{"ast":null,"code":"export default {\n  name: \"File\",\n  data() {\n    const item = {\n      filename: '图片1',\n      type: 'png',\n      size: '256',\n      url: 'http://localhost/file/test.png',\n      enable: '1'\n    };\n    return {\n      tableData: Array(10).fill(item),\n      filename: \"\",\n      multipleSelection: [],\n      total: 100,\n      //记录总数\n      pageIndex: 1,\n      //分页编号\n      pageSize: 5 //分页大小\n    };\n  },\n\n  created() {\n    this.loadPage(); //分页加载数据\n  },\n\n  methods: {\n    loadPage() {\n      // 2.使用 axios 请求后端数据\n      this.request.get(\"/file/page\", {\n        params: {\n          pageIndex: this.pageIndex,\n          pageSize: this.pageSize,\n          filename: this.filename\n        }\n      }).then(res => {\n        console.log(res);\n        this.tableData = res.records;\n        this.total = res.total;\n      });\n    },\n    search() {\n      this.pageIndex = 1;\n      this.loadPage();\n    },\n    handleSizeChange(pageSize) {\n      console.log(`每页 ${pageSize} 条`);\n      this.pageSize = pageSize;\n      this.loadPage(); //分页加载数据\n    },\n\n    handleCurrentChange(pageIndex) {\n      console.log(`当前页: ${pageIndex}`);\n      this.pageIndex = pageIndex;\n      this.loadPage(); //分页加载数据\n    },\n\n    reset() {\n      //重置按钮\n      this.filename = \"\";\n      this.loadPage();\n    },\n    handleDelete(id) {\n      //删除文件\n      this.request.delete(\"/file/\" + id).then(res => {\n        if (res.code == 200) {\n          this.$message.success(res.msg);\n          this.loadPage();\n        } else this.$message.error(res.msg);\n      });\n    },\n    handleSelectionChange(val) {\n      //复选框选择事件\n      this.multipleSelection = val;\n    },\n    handleBatchDelete() {\n      //批量删除\n      let ids = this.multipleSelection.map(v => v.id); //将对象数组 取出属性数组[1,2,3..]\n      this.request.post(\"/file/del/batch\", ids).then(res => {\n        if (res) {\n          this.$message.success(\"批量删除成功！\");\n          this.pageIndex = 1;\n          this.loadPage();\n        } else this.$message.error(\"批量删除失败！\");\n      });\n    },\n    handleFileUploadSuccess(res) {\n      //文件上传成功返回\n      console.log(\"文件上传返回结果：\", res);\n      this.loadPage();\n    },\n    downloadHand(fileUrl) {\n      //下载文件\n      window.open(fileUrl);\n    },\n    changeEnable(row) {\n      //更新文件\n      this.request.post(\"/file/update\", row).then(res => {\n        if (res.code == 200) {\n          this.$message.success(res.msg);\n          this.pageIndex = 1;\n          this.loadPage();\n        } else this.$message.error(res.msg);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","item","filename","type","size","url","enable","tableData","Array","fill","multipleSelection","total","pageIndex","pageSize","created","loadPage","methods","request","get","params","then","res","console","log","records","search","handleSizeChange","handleCurrentChange","reset","handleDelete","id","delete","code","$message","success","msg","error","handleSelectionChange","val","handleBatchDelete","ids","map","v","post","handleFileUploadSuccess","downloadHand","fileUrl","window","open","changeEnable","row"],"sources":["src/views/File.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!--搜索框-->\r\n        <div style=\"padding: 10px 0;\">\r\n            <el-input style=\"width: 200px;\" placeholder=\"请输入文件名称\" suffix-icon=\"el-icon-search\" v-model=\"filename\" ></el-input>\r\n            <el-button class=\"ml-5\" type=\"primary\" @click=\"loadPage\">搜索</el-button>\r\n            <el-button  type=\"warning\" @click=\"reset\">重置</el-button>\r\n        </div>\r\n\r\n        <!--新增-->\r\n        <div style=\"margin: 10px 0\">\r\n            <el-upload name=\"multipartFile\" action=\"http://localhost:9090/file/upload\" :on-success=\"handleFileUploadSuccess\" :show-file-list=\"false\"  style=\"display: inline-block\">\r\n                <el-button type=\"primary\" class=\"ml-5\">上传文件</el-button>\r\n            </el-upload>\r\n            <el-popconfirm class=\"ml-5\" confirm-button-text='确定' cancel-button-text='我再想想' icon=\"el-icon-info\" icon-color=\"red\" title=\"确定删除吗？\" @confirm=\"handleBatchDelete\">\r\n                <el-button type=\"danger\" slot=\"reference\">批量删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n            </el-popconfirm>\r\n        </div>\r\n\r\n        <!-- 主体部分：表格数据 -->\r\n        <el-table :data=\"tableData\" border stripe header-cell-class-name=\"tableHeaderBg\" @selection-change=\"handleSelectionChange\">\r\n            <!--复选框-->\r\n            <el-table-column type=\"selection\" width=\"45\"></el-table-column>\r\n            <!--每行数据-->\r\n            <el-table-column prop=\"id\" label=\"编号\" width=\"60\"></el-table-column>\r\n            <el-table-column prop=\"filename\" label=\"文件名称\" ></el-table-column>\r\n            <el-table-column prop=\"type\" label=\"文件类型\"></el-table-column>\r\n            <el-table-column prop=\"size\" label=\"文件大小(kb)\"></el-table-column>\r\n            <el-table-column prop=\"url\" label=\"下载\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" @click=\"downloadHand(scope.row.url)\">下载</el-button>\r\n                    <img src=\"\"/>\r\n                </template>\r\n\r\n            </el-table-column>\r\n            <el-table-column prop=\"enable\" label=\"启用\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-switch v-model=\"scope.row.enable\" @change=\"changeEnable(scope.row)\" active-color=\"#13ce66\" inactive-color=\"#ccc\"></el-switch>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"op\" label=\"操作\" width=\"250\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"primary\" @click=\"downloadHand(scope.row.url)\">下载</el-button>\r\n                    <el-popconfirm class=\"ml-5\" confirm-button-text='确定' cancel-button-text='我再想想'\r\n                                   icon=\"el-icon-info\" icon-color=\"red\" title=\"确定删除吗？\" @confirm=\"handleDelete(scope.row.id)\">\r\n                        <el-button type=\"danger\" slot=\"reference\">删除 <i class=\"el-icon-delete\"></i></el-button>\r\n                    </el-popconfirm>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <!--分页-->\r\n        <div style=\"padding: 10px 0;\">\r\n            <el-pagination\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n                    :page-sizes=\"[5, 10, 15, 20]\"\r\n                    :current-page=\"pageIndex\"\r\n                    :page-size=\"pageSize\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"total\">\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"File\",\r\n        data(){\r\n            const item = {\r\n                filename: '图片1',\r\n                type: 'png',\r\n                size: '256',\r\n                url: 'http://localhost/file/test.png',\r\n                enable: '1'\r\n            };\r\n            return {\r\n                tableData: Array(10).fill(item),\r\n                filename: \"\",\r\n                multipleSelection: [],\r\n                total: 100,//记录总数\r\n                pageIndex: 1,//分页编号\r\n                pageSize: 5,//分页大小\r\n            }\r\n        },\r\n        created() {\r\n            this.loadPage();//分页加载数据\r\n        },\r\n        methods:{\r\n            loadPage(){\r\n                // 2.使用 axios 请求后端数据\r\n                this.request.get(\"/file/page\",{\r\n                    params: {\r\n                        pageIndex: this.pageIndex,\r\n                        pageSize: this.pageSize,\r\n                        filename: this.filename\r\n                    }\r\n                }).then(res => {\r\n                    console.log(res);\r\n                    this.tableData = res.records;\r\n                    this.total = res.total;\r\n                });\r\n            },\r\n            search(){\r\n                this.pageIndex = 1;\r\n                this.loadPage();\r\n            },\r\n            handleSizeChange(pageSize){\r\n                console.log(`每页 ${pageSize} 条`);\r\n                this.pageSize = pageSize;\r\n                this.loadPage();//分页加载数据\r\n            },\r\n            handleCurrentChange(pageIndex){\r\n                console.log(`当前页: ${pageIndex}`);\r\n                this.pageIndex = pageIndex;\r\n                this.loadPage();//分页加载数据\r\n            },\r\n            reset(){//重置按钮\r\n                this.filename = \"\";\r\n                this.loadPage();\r\n            },\r\n            handleDelete(id){//删除文件\r\n                this.request.delete(\"/file/\"+id).then(res => {\r\n                    if(res.code==200){\r\n                        this.$message.success(res.msg);\r\n                        this.loadPage();\r\n                    } else this.$message.error(res.msg);\r\n                });\r\n            },\r\n            handleSelectionChange(val){//复选框选择事件\r\n                this.multipleSelection = val;\r\n            },\r\n            handleBatchDelete(){//批量删除\r\n                let ids = this.multipleSelection.map(v => v.id);//将对象数组 取出属性数组[1,2,3..]\r\n                this.request.post(\"/file/del/batch\",ids).then(res => {\r\n                    if(res){\r\n                        this.$message.success(\"批量删除成功！\");\r\n                        this.pageIndex=1;\r\n                        this.loadPage();\r\n                    }\r\n                    else this.$message.error(\"批量删除失败！\");\r\n                });\r\n            },\r\n            handleFileUploadSuccess(res){//文件上传成功返回\r\n                console.log(\"文件上传返回结果：\",res);\r\n                this.loadPage();\r\n            },\r\n            downloadHand(fileUrl){//下载文件\r\n                window.open(fileUrl);\r\n            },\r\n            changeEnable(row){//更新文件\r\n                this.request.post(\"/file/update\",row).then(res => {\r\n                    if(res.code==200){\r\n                        this.$message.success(res.msg);\r\n                        this.pageIndex=1;\r\n                        this.loadPage();\r\n                    } else this.$message.error(res.msg);\r\n                });\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAmEA;EACAA,IAAA;EACAC,KAAA;IACA,MAAAC,IAAA;MACAC,QAAA;MACAC,IAAA;MACAC,IAAA;MACAC,GAAA;MACAC,MAAA;IACA;IACA;MACAC,SAAA,EAAAC,KAAA,KAAAC,IAAA,CAAAR,IAAA;MACAC,QAAA;MACAQ,iBAAA;MACAC,KAAA;MAAA;MACAC,SAAA;MAAA;MACAC,QAAA;IACA;EACA;;EACAC,QAAA;IACA,KAAAC,QAAA;EACA;;EACAC,OAAA;IACAD,SAAA;MACA;MACA,KAAAE,OAAA,CAAAC,GAAA;QACAC,MAAA;UACAP,SAAA,OAAAA,SAAA;UACAC,QAAA,OAAAA,QAAA;UACAX,QAAA,OAAAA;QACA;MACA,GAAAkB,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA,KAAAd,SAAA,GAAAc,GAAA,CAAAG,OAAA;QACA,KAAAb,KAAA,GAAAU,GAAA,CAAAV,KAAA;MACA;IACA;IACAc,OAAA;MACA,KAAAb,SAAA;MACA,KAAAG,QAAA;IACA;IACAW,iBAAAb,QAAA;MACAS,OAAA,CAAAC,GAAA,OAAAV,QAAA;MACA,KAAAA,QAAA,GAAAA,QAAA;MACA,KAAAE,QAAA;IACA;;IACAY,oBAAAf,SAAA;MACAU,OAAA,CAAAC,GAAA,SAAAX,SAAA;MACA,KAAAA,SAAA,GAAAA,SAAA;MACA,KAAAG,QAAA;IACA;;IACAa,MAAA;MAAA;MACA,KAAA1B,QAAA;MACA,KAAAa,QAAA;IACA;IACAc,aAAAC,EAAA;MAAA;MACA,KAAAb,OAAA,CAAAc,MAAA,YAAAD,EAAA,EAAAV,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAW,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA,CAAAb,GAAA,CAAAc,GAAA;UACA,KAAApB,QAAA;QACA,YAAAkB,QAAA,CAAAG,KAAA,CAAAf,GAAA,CAAAc,GAAA;MACA;IACA;IACAE,sBAAAC,GAAA;MAAA;MACA,KAAA5B,iBAAA,GAAA4B,GAAA;IACA;IACAC,kBAAA;MAAA;MACA,IAAAC,GAAA,QAAA9B,iBAAA,CAAA+B,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAZ,EAAA;MACA,KAAAb,OAAA,CAAA0B,IAAA,oBAAAH,GAAA,EAAApB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA;UACA,KAAAY,QAAA,CAAAC,OAAA;UACA,KAAAtB,SAAA;UACA,KAAAG,QAAA;QACA,OACA,KAAAkB,QAAA,CAAAG,KAAA;MACA;IACA;IACAQ,wBAAAvB,GAAA;MAAA;MACAC,OAAA,CAAAC,GAAA,cAAAF,GAAA;MACA,KAAAN,QAAA;IACA;IACA8B,aAAAC,OAAA;MAAA;MACAC,MAAA,CAAAC,IAAA,CAAAF,OAAA;IACA;IACAG,aAAAC,GAAA;MAAA;MACA,KAAAjC,OAAA,CAAA0B,IAAA,iBAAAO,GAAA,EAAA9B,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAW,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA,CAAAb,GAAA,CAAAc,GAAA;UACA,KAAAvB,SAAA;UACA,KAAAG,QAAA;QACA,YAAAkB,QAAA,CAAAG,KAAA,CAAAf,GAAA,CAAAc,GAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}