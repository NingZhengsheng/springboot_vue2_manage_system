{"ast":null,"code":"export default {\n  name: \"PersonInfo\",\n  data() {\n    return {\n      form: {},\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\n    };\n  },\n  created() {\n    this.getUser();\n  },\n  methods: {\n    getUser() {\n      this.request.get(\"http://localhost:9090/user/\" + this.user.id).then(res => {\n        console.log(\"个人信息\", res);\n        this.form = res;\n      });\n    },\n    savaUser() {\n      //修改用户信息\n      this.request.post(\"/user\", this.form).then(res => {\n        if (res.code == 200) {\n          this.$message.success(\"保存成功！\");\n          let user = this.getUser();\n          localStorage.setItem(\"user\", JSON.stringify(res.data)); //将当前用户信息重新存储\n        } else this.$message.error(\"保存失败！\");\n      });\n    },\n    handleAvatarSuccess(res) {\n      console.log(\"上传个人头像返回结果：\", res);\n      this.form.avatar = res;\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","user","localStorage","getItem","JSON","parse","created","getUser","methods","request","get","id","then","res","console","log","savaUser","post","code","$message","success","setItem","stringify","error","handleAvatarSuccess","avatar"],"sources":["src/views/PersonInfo.vue"],"sourcesContent":["<template>\r\n    <el-card style=\"width: 500px; padding: 20px\">\r\n        <el-form label-width=\"100px\" size=\"small\">\r\n            <el-upload\r\n                    style=\"text-align: center;margin:10px\"\r\n                    name=\"multipartFile\"\r\n                    class=\"avatar-uploader\"\r\n                    action=\"http://localhost:9090/file/upload\"\r\n                    :show-file-list=\"false\"\r\n                    :on-success=\"handleAvatarSuccess\">\r\n                <img v-if=\"form.avatar\" :src=\"form.avatar\" class=\"avatar\">\r\n                <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n            </el-upload>\r\n            <el-form-item label=\"用户名\"><el-input v-model=\"form.username\" autocomplete=\"off\" disabled=\"\"></el-input></el-form-item>\r\n            <el-form-item label=\"昵称\"><el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input></el-form-item>\r\n            <el-form-item label=\"邮箱\"><el-input v-model=\"form.email\" autocomplete=\"off\"></el-input></el-form-item>\r\n            <el-form-item label=\"电话\"><el-input v-model=\"form.phone\" autocomplete=\"off\"></el-input></el-form-item>\r\n            <el-form-item label=\"地址\"><el-input v-model=\"form.address\" autocomplete=\"off\"></el-input></el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"savaUser\">确 定</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </el-card>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"PersonInfo\",\r\n        data(){\r\n            return {\r\n                form: {},\r\n                user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\r\n            }\r\n        },\r\n        created(){\r\n            this.getUser();\r\n        },\r\n        methods: {\r\n            getUser(){\r\n                this.request.get(\"http://localhost:9090/user/\"+this.user.id).then(res => {\r\n                    console.log(\"个人信息\",res);\r\n                    this.form = res;\r\n                });\r\n            },\r\n            savaUser(){//修改用户信息\r\n                this.request.post(\"/user\",this.form).then(res => {\r\n                    if(res.code == 200){\r\n                        this.$message.success(\"保存成功！\");\r\n                        let user = this.getUser();\r\n                        localStorage.setItem(\"user\",JSON.stringify(res.data));//将当前用户信息重新存储\r\n                    }\r\n                    else this.$message.error(\"保存失败！\");\r\n                });\r\n            },\r\n            handleAvatarSuccess(res){\r\n                console.log(\"上传个人头像返回结果：\",res)\r\n                this.form.avatar = res;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .avatar-uploader .el-upload {\r\n        border: 1px dashed #d9d9d9;\r\n        border-radius: 6px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n    .avatar-uploader .el-upload:hover {\r\n        border-color: #409EFF;\r\n    }\r\n    .avatar-uploader-icon {\r\n        font-size: 28px;\r\n        color: #8c939d;\r\n        width: 178px;\r\n        height: 178px;\r\n        line-height: 178px;\r\n        text-align: center;\r\n    }\r\n    .avatar {\r\n        width: 178px;\r\n        height: 178px;\r\n        display: block;\r\n    }\r\n</style>"],"mappings":"AA0BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,IAAA,EAAAC,YAAA,CAAAC,OAAA,WAAAC,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACAD,QAAA;MACA,KAAAE,OAAA,CAAAC,GAAA,sCAAAT,IAAA,CAAAU,EAAA,EAAAC,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,SAAAF,GAAA;QACA,KAAAb,IAAA,GAAAa,GAAA;MACA;IACA;IACAG,SAAA;MAAA;MACA,KAAAP,OAAA,CAAAQ,IAAA,eAAAjB,IAAA,EAAAY,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAK,IAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA,IAAAnB,IAAA,QAAAM,OAAA;UACAL,YAAA,CAAAmB,OAAA,SAAAjB,IAAA,CAAAkB,SAAA,CAAAT,GAAA,CAAAd,IAAA;QACA,OACA,KAAAoB,QAAA,CAAAI,KAAA;MACA;IACA;IACAC,oBAAAX,GAAA;MACAC,OAAA,CAAAC,GAAA,gBAAAF,GAAA;MACA,KAAAb,IAAA,CAAAyB,MAAA,GAAAZ,GAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}