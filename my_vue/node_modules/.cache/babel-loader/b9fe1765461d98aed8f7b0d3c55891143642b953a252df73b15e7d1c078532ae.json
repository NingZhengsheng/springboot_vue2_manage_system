{"ast":null,"code":"export default {\n  name: \"User\",\n  data() {\n    const item = {\n      username: 'ning',\n      nickname: '战胜',\n      email: 'ning@123',\n      phone: '123456789',\n      address: '上海市普陀区金沙江路 1518 弄'\n    };\n    return {\n      tableData: Array(10).fill(item),\n      total: 100,\n      //记录总数\n      pageIndex: 1,\n      //分页编号\n      pageSize: 5,\n      //分页大小\n      // collapseBtnClass:'el-icon-s-fold',\n      // isCollapse:false,//导航栏是否打开\n      // sideWidth:200,\n      // logoTextShow:true,//logo文本是否显示\n      dialogFormVisible: false,\n      //新增弹窗是否展示\n      form: {},\n      //用户表单信息\n      multipleSelection: [],\n      //复选框选择内容\n      username: \"\" //用户名与空间绑定\n    };\n  },\n\n  created() {\n    this.loadPage(); //分页加载数据\n  },\n\n  methods: {\n    loadPage() {\n      // 2.使用 axios 请求后端数据\n      this.request.get(\"/user/page\", {\n        params: {\n          pageIndex: this.pageIndex,\n          pageSize: this.pageSize,\n          username: this.username\n        }\n      }).then(res => {\n        console.log(res);\n        this.tableData = res.records;\n        this.total = res.total;\n      });\n    },\n    handleSizeChange(pageSize) {\n      console.log(`每页 ${pageSize} 条`);\n      this.pageSize = pageSize;\n      this.loadPage(); //分页加载数据\n    },\n\n    handleCurrentChange(pageIndex) {\n      console.log(`当前页: ${pageIndex}`);\n      this.pageIndex = pageIndex;\n      this.loadPage(); //分页加载数据\n    },\n\n    reset() {\n      //重置按钮\n      this.username = \"\";\n      this.loadPage();\n    },\n    handleAdd() {\n      //新增用户按钮\n      this.dialogFormVisible = true;\n      this.form = {}; //置空form表单\n    },\n\n    savaUser() {\n      //新增用户\n      this.request.post(\"/user\", this.form).then(res => {\n        if (res) {\n          this.$message.success(\"保存成功！\");\n          this.loadPage();\n        } else this.$message.error(\"保存失败！\");\n      });\n      this.dialogFormVisible = false;\n    },\n    handleEdit(row) {\n      //编辑用户\n      this.form = row;\n      this.dialogFormVisible = true;\n    },\n    handleDelete(id) {\n      //删除用户\n      this.request.delete(\"/user/\" + id).then(res => {\n        if (res) {\n          this.$message.success(\"删除成功！\");\n          this.loadPage();\n        } else this.$message.error(\"删除失败！\");\n      });\n    },\n    handleSelectionChange(val) {\n      //复选框选择事件\n      this.multipleSelection = val;\n    },\n    handleBatchDelete() {\n      //批量删除\n      let ids = this.multipleSelection.map(v => v.id); //将对象数组 取出属性数组[1,2,3..]\n      this.request.post(\"/user/del/batch\", ids).then(res => {\n        if (res) {\n          this.$message.success(\"批量删除成功！\");\n          this.pageIndex = 1;\n          this.loadPage();\n        } else this.$message.error(\"批量删除失败！\");\n      });\n    },\n    expfun() {\n      //导出表格\n      window.open(\"http://localhost:9090/user/export\");\n    },\n    handleExcelImportSuccess() {\n      //导入Excel文件\n      this.$message.success(\"文件导入成功！\");\n      this.loadPage();\n    }\n  }\n};","map":{"version":3,"names":["name","data","item","username","nickname","email","phone","address","tableData","Array","fill","total","pageIndex","pageSize","dialogFormVisible","form","multipleSelection","created","loadPage","methods","request","get","params","then","res","console","log","records","handleSizeChange","handleCurrentChange","reset","handleAdd","savaUser","post","$message","success","error","handleEdit","row","handleDelete","id","delete","handleSelectionChange","val","handleBatchDelete","ids","map","v","expfun","window","open","handleExcelImportSuccess"],"sources":["src/views/User.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!--搜索框-->\r\n        <div style=\"padding: 10px 0;\">\r\n            <el-input style=\"width: 200px;\" placeholder=\"请输入名称\" suffix-icon=\"el-icon-search\" v-model=\"username\" ></el-input>\r\n            <!--<el-input style=\"width: 200px;\" placeholder=\"请输入邮箱\" suffix-icon=\"el-icon-message\" class=\"ml-5\"></el-input>-->\r\n            <!--<el-input style=\"width: 200px;\" placeholder=\"请输入地址\" suffix-icon=\"el-icon-position\"  class=\"ml-5\"></el-input>-->\r\n            <el-button class=\"ml-5\" type=\"primary\" @click=\"loadPage\">搜索</el-button>\r\n            <el-button  type=\"warning\" @click=\"reset\">重置</el-button>\r\n        </div>\r\n        <!--新增-->\r\n        <div style=\"margin: 10px 0\">\r\n            <el-button type=\"primary\" @click=\"handleAdd\">新增 <i class=\"el-icon-circle-plus-outline\"></i></el-button>\r\n            <el-popconfirm class=\"ml-5\" confirm-button-text='确定' cancel-button-text='我再想想' icon=\"el-icon-info\" icon-color=\"red\" title=\"确定删除吗？\" @confirm=\"handleBatchDelete\">\r\n                <el-button type=\"danger\" slot=\"reference\">批量删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n            </el-popconfirm>\r\n            <el-upload name=\"multipartFile\" action=\"http://localhost:9090/user/import\"\r\n                       :on-success=\"handleExcelImportSuccess\" :limit=\"1\" :show-file-list=\"false\"\r\n                       accept=\"xlsx\" style=\"display: inline-block\">\r\n                <el-button type=\"primary\" class=\"ml-5\">导入 <i class=\"el-icon-download\"></i></el-button>\r\n            </el-upload>\r\n            <el-button type=\"primary\" @click=\"expfun\" class=\"ml-5\">导出 <i class=\"el-icon-upload2\"></i></el-button>\r\n        </div>\r\n\r\n        <!-- 表格数据 -->\r\n        <el-table :data=\"tableData\" border stripe header-cell-class-name=\"tableHeaderBg\" @selection-change=\"handleSelectionChange\">\r\n            <!--复选框-->\r\n            <el-table-column type=\"selection\" width=\"45\"></el-table-column>\r\n            <!--每行数据-->\r\n            <el-table-column prop=\"id\" label=\"编号\" width=\"60\"></el-table-column>\r\n            <el-table-column prop=\"username\" label=\"用户名\" width=\"120\"></el-table-column>\r\n            <el-table-column prop=\"nickname\" label=\"昵称\"></el-table-column>\r\n            <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n            <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\r\n            <el-table-column prop=\"address\" label=\"地址\"></el-table-column>\r\n            <el-table-column prop=\"op\" label=\"操作\" width=\"250\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"success\" @click=\"handleEdit(scope.row)\">编辑 <i class=\"el-icon-edit-outline\"></i></el-button>\r\n                    <el-popconfirm class=\"ml-5\" confirm-button-text='确定' cancel-button-text='我再想想'\r\n                                   icon=\"el-icon-info\" icon-color=\"red\" title=\"确定删除吗？\" @confirm=\"handleDelete(scope.row.id)\">\r\n                        <el-button type=\"danger\" slot=\"reference\">删除 <i class=\"el-icon-delete\"></i></el-button>\r\n                    </el-popconfirm>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <!--分页-->\r\n        <div style=\"padding: 10px 0;\">\r\n            <el-pagination\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n                    :page-sizes=\"[5, 10, 15, 20]\"\r\n                    :current-page=\"pageIndex\"\r\n                    :page-size=\"pageSize\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"total\">\r\n            </el-pagination>\r\n        </div>\r\n\r\n        <!--新增用户弹窗-->\r\n        <el-dialog title=\"用户信息\" :visible.sync=\"dialogFormVisible\" width=\"35%\">\r\n            <el-form label-width=\"100px\" size=\"small\">\r\n                <el-form-item label=\"用户名\"><el-input v-model=\"form.username\" autocomplete=\"off\"></el-input></el-form-item>\r\n                <el-form-item label=\"昵称\"><el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input></el-form-item>\r\n                <el-form-item label=\"邮箱\"><el-input v-model=\"form.email\" autocomplete=\"off\"></el-input></el-form-item>\r\n                <el-form-item label=\"电话\"><el-input v-model=\"form.phone\" autocomplete=\"off\"></el-input></el-form-item>\r\n                <el-form-item label=\"地址\"><el-input v-model=\"form.address\" autocomplete=\"off\"></el-input></el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"savaUser\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"User\",\r\n        data(){\r\n            const item = {\r\n                username: 'ning',\r\n                nickname: '战胜',\r\n                email: 'ning@123',\r\n                phone: '123456789',\r\n                address: '上海市普陀区金沙江路 1518 弄'\r\n            };\r\n            return {\r\n                tableData: Array(10).fill(item),\r\n                total: 100,//记录总数\r\n                pageIndex: 1,//分页编号\r\n                pageSize: 5,//分页大小\r\n                // collapseBtnClass:'el-icon-s-fold',\r\n                // isCollapse:false,//导航栏是否打开\r\n                // sideWidth:200,\r\n                // logoTextShow:true,//logo文本是否显示\r\n                dialogFormVisible: false, //新增弹窗是否展示\r\n                form: {},//用户表单信息\r\n                multipleSelection: [],//复选框选择内容\r\n                username: \"\",//用户名与空间绑定\r\n            }\r\n        },\r\n        created(){\r\n            this.loadPage();//分页加载数据\r\n        },\r\n        methods:{\r\n            loadPage(){\r\n                // 2.使用 axios 请求后端数据\r\n                this.request.get(\"/user/page\",{\r\n                    params: {\r\n                        pageIndex: this.pageIndex,\r\n                        pageSize: this.pageSize,\r\n                        username: this.username\r\n                    }\r\n                }).then(res => {\r\n                    console.log(res);\r\n                    this.tableData = res.records;\r\n                    this.total = res.total;\r\n                });\r\n            },\r\n            handleSizeChange(pageSize){\r\n                console.log(`每页 ${pageSize} 条`);\r\n                this.pageSize = pageSize;\r\n                this.loadPage();//分页加载数据\r\n            },\r\n            handleCurrentChange(pageIndex){\r\n                console.log(`当前页: ${pageIndex}`);\r\n                this.pageIndex = pageIndex;\r\n                this.loadPage();//分页加载数据\r\n            },\r\n            reset(){//重置按钮\r\n                this.username = \"\";\r\n                this.loadPage();\r\n            },\r\n            handleAdd(){//新增用户按钮\r\n                this.dialogFormVisible =  true;\r\n                this.form = {};//置空form表单\r\n            },\r\n            savaUser(){//新增用户\r\n                this.request.post(\"/user\",this.form).then(res => {\r\n                    if(res){\r\n                        this.$message.success(\"保存成功！\");\r\n                        this.loadPage();\r\n                    }\r\n                    else this.$message.error(\"保存失败！\");\r\n                });\r\n                this.dialogFormVisible =  false;\r\n            },\r\n            handleEdit(row){//编辑用户\r\n                this.form = row;\r\n                this.dialogFormVisible = true;\r\n            },\r\n            handleDelete(id){//删除用户\r\n                this.request.delete(\"/user/\"+id).then(res => {\r\n                    if(res){\r\n                        this.$message.success(\"删除成功！\");\r\n                        this.loadPage();\r\n                    }\r\n                    else this.$message.error(\"删除失败！\");\r\n                });\r\n            },\r\n            handleSelectionChange(val){//复选框选择事件\r\n                this.multipleSelection = val;\r\n            },\r\n            handleBatchDelete(){//批量删除\r\n                let ids = this.multipleSelection.map(v => v.id);//将对象数组 取出属性数组[1,2,3..]\r\n                this.request.post(\"/user/del/batch\",ids).then(res => {\r\n                    if(res){\r\n                        this.$message.success(\"批量删除成功！\");\r\n                        this.pageIndex=1;\r\n                        this.loadPage();\r\n                    }\r\n                    else this.$message.error(\"批量删除失败！\");\r\n                });\r\n            },\r\n            expfun(){//导出表格\r\n                window.open(\"http://localhost:9090/user/export\");\r\n            },\r\n            handleExcelImportSuccess(){//导入Excel文件\r\n                this.$message.success(\"文件导入成功！\");\r\n                this.loadPage();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .tableHeaderBg{\r\n        background: #eee!important;\r\n    }\r\n</style>"],"mappings":"AA6EA;EACAA,IAAA;EACAC,KAAA;IACA,MAAAC,IAAA;MACAC,QAAA;MACAC,QAAA;MACAC,KAAA;MACAC,KAAA;MACAC,OAAA;IACA;IACA;MACAC,SAAA,EAAAC,KAAA,KAAAC,IAAA,CAAAR,IAAA;MACAS,KAAA;MAAA;MACAC,SAAA;MAAA;MACAC,QAAA;MAAA;MACA;MACA;MACA;MACA;MACAC,iBAAA;MAAA;MACAC,IAAA;MAAA;MACAC,iBAAA;MAAA;MACAb,QAAA;IACA;EACA;;EACAc,QAAA;IACA,KAAAC,QAAA;EACA;;EACAC,OAAA;IACAD,SAAA;MACA;MACA,KAAAE,OAAA,CAAAC,GAAA;QACAC,MAAA;UACAV,SAAA,OAAAA,SAAA;UACAC,QAAA,OAAAA,QAAA;UACAV,QAAA,OAAAA;QACA;MACA,GAAAoB,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA,KAAAhB,SAAA,GAAAgB,GAAA,CAAAG,OAAA;QACA,KAAAhB,KAAA,GAAAa,GAAA,CAAAb,KAAA;MACA;IACA;IACAiB,iBAAAf,QAAA;MACAY,OAAA,CAAAC,GAAA,OAAAb,QAAA;MACA,KAAAA,QAAA,GAAAA,QAAA;MACA,KAAAK,QAAA;IACA;;IACAW,oBAAAjB,SAAA;MACAa,OAAA,CAAAC,GAAA,SAAAd,SAAA;MACA,KAAAA,SAAA,GAAAA,SAAA;MACA,KAAAM,QAAA;IACA;;IACAY,MAAA;MAAA;MACA,KAAA3B,QAAA;MACA,KAAAe,QAAA;IACA;IACAa,UAAA;MAAA;MACA,KAAAjB,iBAAA;MACA,KAAAC,IAAA;IACA;;IACAiB,SAAA;MAAA;MACA,KAAAZ,OAAA,CAAAa,IAAA,eAAAlB,IAAA,EAAAQ,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA;UACA,KAAAU,QAAA,CAAAC,OAAA;UACA,KAAAjB,QAAA;QACA,OACA,KAAAgB,QAAA,CAAAE,KAAA;MACA;MACA,KAAAtB,iBAAA;IACA;IACAuB,WAAAC,GAAA;MAAA;MACA,KAAAvB,IAAA,GAAAuB,GAAA;MACA,KAAAxB,iBAAA;IACA;IACAyB,aAAAC,EAAA;MAAA;MACA,KAAApB,OAAA,CAAAqB,MAAA,YAAAD,EAAA,EAAAjB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA;UACA,KAAAU,QAAA,CAAAC,OAAA;UACA,KAAAjB,QAAA;QACA,OACA,KAAAgB,QAAA,CAAAE,KAAA;MACA;IACA;IACAM,sBAAAC,GAAA;MAAA;MACA,KAAA3B,iBAAA,GAAA2B,GAAA;IACA;IACAC,kBAAA;MAAA;MACA,IAAAC,GAAA,QAAA7B,iBAAA,CAAA8B,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAP,EAAA;MACA,KAAApB,OAAA,CAAAa,IAAA,oBAAAY,GAAA,EAAAtB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA;UACA,KAAAU,QAAA,CAAAC,OAAA;UACA,KAAAvB,SAAA;UACA,KAAAM,QAAA;QACA,OACA,KAAAgB,QAAA,CAAAE,KAAA;MACA;IACA;IACAY,OAAA;MAAA;MACAC,MAAA,CAAAC,IAAA;IACA;IACAC,yBAAA;MAAA;MACA,KAAAjB,QAAA,CAAAC,OAAA;MACA,KAAAjB,QAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}