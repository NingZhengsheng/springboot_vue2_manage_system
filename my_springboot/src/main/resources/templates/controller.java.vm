package ${package.Controller};

//添加自己模板中需要的头文件
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import java.util.List;
import $!{package.Service}.$!{table.serviceName};
import ${package.Entity}.${entity};
##import org.springframework.beans.factory.annotation.*;
##import com.baomidou.mybatisplus.core.metadata.IPage;
##import org.springframework.web.bind.annotation.RequestMapping;




#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    //添加控制层类的逻辑代码函数
    @Resource
    private ${table.serviceName} ${table.entityPath}Service;

    //查询User所有的记录
    @GetMapping("")
    public List<${entity}> findAll(){
        return ${table.entityPath}Service.list();
    }

    //插入和更新
    @PostMapping("")
    public boolean saveOrUpdate(@RequestBody ${entity} ${table.entityPath}){
        return ${table.entityPath}Service.saveOrUpdate(${table.entityPath});
    }

    //删除
    @DeleteMapping("/{id}")
    public boolean delete(@PathVariable Integer id){
        return ${table.entityPath}Service.removeById(id);
    }

    //根据id查询
    @GetMapping("/{id}")
    public ${entity} findById(@PathVariable Integer id){
        return ${table.entityPath}Service.getById(id);
    }

    //分页查询
    @GetMapping("/page")
    public Page<${entity}> findByPage(@RequestParam Integer pageIndex,@RequestParam Integer pageSize){
        QueryWrapper<User> queryWrapper = new QueryWrapper<>();
        //queryWrapper.orderByDesc("id");
        return ${table.entityPath}Service.page(new Page(pageIndex,pageSize),queryWrapper);
    }

    // 批量删除
    @PostMapping("/del/batch")
    public boolean batchDelete(@RequestBody List<Integer> ids){
        return ${table.entityPath}Service.removeByIds(ids);
    }
}

#end